
#####################################################################

set(
	STD_NORMSOURCES
		${NORMSOURCES_ALIGNMENT}
		${NORMSOURCES_CHOPPING}
		${NORMSOURCES_COMMON}
		${NORMSOURCES_DISPLAY}
		${NORMSOURCES_EXCEPTION}
		${NORMSOURCES_FILE}
		${NORMSOURCES_OPTIONS}
		${NORMSOURCES_SCAN}
		${NORMSOURCES_SCORE}
		${NORMSOURCES_SSAP}
		${NORMSOURCES_STRUCTURE}
		${NORMSOURCES_SUPERPOSITION}
)

set(
	STD_TESTSOURCES
		${TESTSOURCES_ALIGNMENT}
		${TESTSOURCES_CATH_SUPERPOSE}
		${TESTSOURCES_CHOPPING}
		${TESTSOURCES_COMMON}
		${TESTSOURCES_DISPLAY}
		${TESTSOURCES_EXCEPTION}
		${TESTSOURCES_FILE}
		${TESTSOURCES_OPTIONS}
		${TESTSOURCES_SCAN}
		${TESTSOURCES_SCORE}
		${TESTSOURCES_SSAP}
		${TESTSOURCES_STRUCTURE}
		${TESTSOURCES_SUPERPOSITION}
)

#####################################################################

add_library(
	normsources_cath_refine_align
		${NORMSOURCES_CATH_REFINE_ALIGN}
)

add_library(
	normsources_cath_score_align
		${NORMSOURCES_CATH_SCORE_ALIGN}
)

add_library(
	normsources_cath_superpose
		${NORMSOURCES_CATH_SUPERPOSE}
)

add_library(
	normsources_test
		${NORMSOURCES_TEST}
)

add_library(
	std_normsources
		${STD_NORMSOURCES}
)

add_library(
	std_testsources
	OBJECT
		${STD_TESTSOURCES}
)

#####################################################################

add_executable(
	build-test
		$<TARGET_OBJECTS:std_testsources>
		${TESTSOURCES_EXECUTABLES_CATH_BINARIES_BUILD_TEST}
)

add_executable(
	cath-refine-align
		${NORMSOURCES_EXECUTABLES_CATH_REFINE_ALIGN}
)

add_executable(
	cath-score-align
		${NORMSOURCES_EXECUTABLES_CATH_SCORE_ALIGN}
)

add_executable(
	cath-ssap
		${NORMSOURCES_EXECUTABLES_CATH_SSAP}
)

add_executable(
	cath-superpose
		${NORMSOURCES_EXECUTABLES_CATH_SUPERPOSE}
)

if ( DEFINED ENV{BUILD_EXTRA_CATH_BINARIES} )
	add_executable(
		snap-judgement
			${NORMSOURCES_EXECUTABLES_SNAP_JUDGEMENT}
	)

	add_executable(
		check-pdb
			${NORMSOURCES_EXECUTABLES_CATH_CHECK_PDB}
	)
endif ( DEFINED ENV{BUILD_EXTRA_CATH_BINARIES} )

#####################################################################

target_link_libraries( build-test        normsources_cath_superpose normsources_test std_normsources biop gen pthread ${Boost_LIBRARIES} )
target_link_libraries( cath-refine-align normsources_cath_refine_align               std_normsources biop gen pthread ${Boost_LIBRARIES} )
target_link_libraries( cath-score-align  normsources_cath_score_align                std_normsources biop gen pthread ${Boost_LIBRARIES} )
target_link_libraries( cath-ssap                                                     std_normsources biop gen pthread ${Boost_LIBRARIES} )
target_link_libraries( cath-superpose    normsources_cath_superpose                  std_normsources biop gen pthread ${Boost_LIBRARIES} )

add_dependencies( build-test        built_bioplib_libraries )
add_dependencies( cath-refine-align built_bioplib_libraries )
add_dependencies( cath-score-align  built_bioplib_libraries )
add_dependencies( cath-ssap         built_bioplib_libraries )
add_dependencies( cath-superpose    built_bioplib_libraries )

if ( DEFINED ENV{BUILD_EXTRA_CATH_BINARIES} )
	target_link_libraries( snap-judgement    normsources_cath_superpose                  std_normsources biop gen pthread ${Boost_LIBRARIES} )
	target_link_libraries( check-pdb                                                     std_normsources biop gen pthread ${Boost_LIBRARIES} )

	add_dependencies( snap-judgement built_bioplib_libraries )
	add_dependencies( check-pdb      built_bioplib_libraries )
endif ( DEFINED ENV{BUILD_EXTRA_CATH_BINARIES} )

#####################################################################









# add_executable(
# 	develtest
# 		${NORMSOURCES_EXECUTABLES_DEVELTEST}
# 
# 		#common/boost_addenda/range/adaptor/adaptor_test.cpp
# 		#exception/invalid_argument_exception.cpp
# 
# 		common/file/open_fstream.cpp
# 		exception/invalid_argument_exception.cpp
# 		exception/runtime_error_exception.cpp
# 		structure/geometry/orientation_covering.cpp
# 		structure/geometry/orientation_covering_test.cpp
# 		structure/geometry/quat_rot.cpp
# )
#SET_TARGET_PROPERTIES( develtest PROPERTIES LINK_FLAGS "-Wl,--unresolved-symbols=ignore-in-object-files" )
# target_link_libraries( develtest                pthread ${Boost_LIBRARIES} )


