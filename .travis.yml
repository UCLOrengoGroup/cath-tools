# It's better that these Travis files explicitly specify:
# sudo:false
# which then allows them to be run in a Docker-style container
# but this file currently having to use sudo to get a recent Boost (1.57.0) because
# the whitelisted boost-latest ppa respoistory:
# https://launchpad.net/~boost-latest/+archive/ubuntu/ppa
# currently only offers Boost <= v1.55.0.
# If/when Boost >= v1.57.0 gets added to boost-latest, then
# use that instead of the sudo commands and then uncomment sudo: false
#sudo: false
language: cpp

notifications:
  slack: cathupdate:9wDvWdLmrVhxI4JcsOFlkxir
  email:
    recipients:
      - i.sillitoe@ucl.ac.uk
      - t.lewis@ucl.ac.uk

# GCC is commented out for now because it doesn't seem to successfully link against
# the Boost libraries (it gives messages like:
#     `.text._ZN5boost16exception_detail19error_info_injectorISt13runtime_errorED2Ev'
#     referenced in section
#     `.text._ZN5boost16exception_detail19error_info_injectorISt13runtime_errorED1Ev[_ZN5boost16exception_detail19error_info_injectorISt13runtime_errorED1Ev]'
#     of /usr/lib/gcc/x86_64-linux-gnu/4.9/../../../../lib/libboost_log.a(default_sink.o):
#     defined in discarded section
#     `.text._ZN5boost16exception_detail19error_info_injectorISt13runtime_errorED2Ev[_ZN5boost16exception_detail19error_info_injectorISt13runtime_errorED5Ev]'
#     of /usr/lib/gcc/x86_64-linux-gnu/4.9/../../../../lib/libboost_log.a(default_sink.o)
# )
compiler:
  - clang
#  - gcc

install:
  - if [ "$CXX" == "g++"     ]; then export CXX="g++-4.9"     CC="gcc-4.9"   ; fi
  - if [ "$CXX" == "clang++" ]; then export CXX="clang++-3.6" CC="clang-3.6" ; fi

addons:
  apt:
    sources:
      - kalakris-cmake
      - llvm-toolchain-precise-3.6
      - ubuntu-toolchain-r-test
    packages:
      - clang-3.6
      - cmake
      - gcc-4.9
      - g++-4.9
      - ninja-build

before_script:
  - sudo add-apt-repository ppa:afrank/boost -y
  - sudo apt-get update -q
  - sudo apt-get install libboost1.57-all libboost1.57-all-dev
  - mkdir release_build && cd release_build
  - cmake -GNinja -DCMAKE_BUILD_TYPE=RELEASE ..
  - cd $TRAVIS_BUILD_DIR

script: ninja -j 2 -k 0 -C release_build && release_build/build-test --build_info=yes --log_level=message --report_level=short --show_progress=yes
