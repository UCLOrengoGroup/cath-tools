# It's better that these Travis files explicitly specify:
# sudo:false
# which then allows them to be run in a Docker-style container
# but this file currently having to use sudo to get a recent Boost (1.60.0) because
# the white-listed boost-latest ppa repository:
# https://launchpad.net/~boost-latest/+archive/ubuntu/ppa
# currently only offers Boost <= v1.55.0.
# If/when Boost >= v1.60.0 gets added to boost-latest, then
# use that instead of the sudo commands and then uncomment sudo: false
#sudo: false
dist: trusty
language: cpp
sudo: required

notifications:
  slack: cathupdate:9wDvWdLmrVhxI4JcsOFlkxir
  email:
    recipients:
      - i.sillitoe@ucl.ac.uk
      - t.lewis@ucl.ac.uk

os:
  - linux
  - osx

compiler:
  - clang
  - gcc

env:
 #- BUILDTYPE=DEBUG
 - BUILDTYPE=RELEASE
 #- BUILDTYPE=RELWITHDEBINFO
 - BUILDTYPE=ASAN    # Address sanitizer
# - BUILDTYPE=MSAN    # Memory sanitizer              (commented out because it requires rebuilding the standard library!)
# - BUILDTYPE=UBSAN   # Undefined-behaviour sanitizer (commented out due to failures in boost: /usr/include/boost/serialization/singleton.hpp:132:13: runtime error: reference binding to null pointer of type 'const boost::serialization::extended_type_info_typeid<cath::score::aligned_pair_score>')
# - BUILDTYPE="ANALYZE" # Use scan_build, which builds with Clang's static analyzer

matrix:
  fast_finish: true
  allow_failures:
    - compiler: gcc
      env:      BUILDTYPE=ASAN

before_install:
  - if [[ $TRAVIS_OS_NAME == osx                                                    ]]; then brew update                                                                                       ; fi
  - if [[ $TRAVIS_OS_NAME == osx                                                    ]]; then brew install gsl                                                                                  ; fi
  - if [[ $TRAVIS_OS_NAME == osx                                                    ]]; then brew install ninja                                                                                ; fi
# - if [[ $TRAVIS_OS_NAME == osx                                                    ]]; then export CMAKE_CXX_FLAGS="${CMAKE_CXX_FLAGS} -fvisibility=hidden -fvisibility-inlines-hidden"       ; fi # This was an attempt to remove warnings like: "direct access in [...] to global weak symbol [...] means the weak symbol cannot be overridden at runtime" but none of "-fvisibility=default", "-fvisibility=hidden" or "-fvisibility=hidden -fvisibility-inlines-hidden" worked
  - if [[ $TRAVIS_OS_NAME == linux                                                  ]]; then export BUILD_FILE_SUFFIX="ubuntu14.04"; else export BUILD_FILE_SUFFIX="macos"                     ; fi
  - if [[ $TRAVIS_OS_NAME == linux ]] && [[ $CC =~ ^clang                           ]]; then export CXX="clang++" CC="clang"                                                                   ; fi
  - if [[ $TRAVIS_OS_NAME == linux ]] && [[ $CC =~ ^gcc                             ]]; then export CXX="g++-4.9" CC="gcc-4.9"                                                                 ; fi
# - if [[ $TRAVIS_OS_NAME == osx   ]] && [[ $CC =~ ^gcc                             ]]; then export CXX="g++-4.8" CC="gcc-4.8"                                                                 ; fi # Default gcc on osx is just a front-end for LLVM so should be able to use this to explicitly request the real GCC 4.8. It isn't working right now - maybe just needs a more recent osx_image (https://docs.travis-ci.com/user/reference/osx/#OS-X-Version) ? Not worth spending more time on now.
  - if [[ $BUILDTYPE =~ SAN$                                                        ]]; then export CMAKE_BUILD_TYPE="RELEASE"                                                                 ; fi
  - if [[ $BUILDTYPE == ASAN                                                        ]]; then export CMAKE_CXX_FLAGS="${CMAKE_CXX_FLAGS} -fsanitize=address -fno-omit-frame-pointer"            ; fi
  - if [[ $TRAVIS_OS_NAME == osx   ]] && [[ $BUILDTYPE == ASAN                      ]]; then export ASAN_OPTIONS="detect_container_overflow=0"                                                 ; fi
# - if [[ $BUILDTYPE == MSAN                                                        ]]; then export CMAKE_CXX_FLAGS="${CMAKE_CXX_FLAGS} -fsanitize=memory  -fno-omit-frame-pointer"            ; fi
# - if [[ $BUILDTYPE == UBSAN                                                       ]]; then export CMAKE_CXX_FLAGS="${CMAKE_CXX_FLAGS} -fsanitize=undefined                      "            ; fi
# - if [[ $BUILDTYPE == ANALYZE                                                     ]]; then export CMAKE_BUILD_TYPE="RELEASE" ; export WRAPPER="scan_build-3.6 " ; fi else export WRAPPER=" " ; fi
  - if [[ $TRAVIS_OS_NAME == linux ]] && [[ $CC =~ ^gcc ]] && [[ $BUILDTYPE =~ SAN$ ]]; then export CMAKE_CXX_FLAGS="${CMAKE_CXX_FLAGS} -fuse-ld=gold"                                         ; fi
  - if [[ $BUILDTYPE == RELEASE                                                     ]]; then export CMAKE_BUILD_TYPE="RELEASE"       ; export CMAKE_CXX_FLAGS="${CMAKE_CXX_FLAGS}"             ; fi
# - if [[ $BUILDTYPE == DEBUG                                                       ]]; then export CMAKE_BUILD_TYPE="DEBUG"         ; export CMAKE_CXX_FLAGS="${CMAKE_CXX_FLAGS}"               ; fi
# - if [[ $BUILDTYPE == RELWITHDEBINFO                                              ]]; then export CMAKE_BUILD_TYPE="RELWITHDEBINFO"; export CMAKE_CXX_FLAGS="${CMAKE_CXX_FLAGS}"               ; fi
# - if [[                                   $CC =~ ^clang                           ]]; then export CMAKE_CXX_FLAGS="${CMAKE_CXX_FLAGS} -stdlib=libc++ " ; fi

install:
  - if [[ $TRAVIS_OS_NAME == linux ]] && [[ $CC =~ ^clang ]]; then sudo apt-get update  -qq                                  ; fi
  - if [[ $TRAVIS_OS_NAME == linux ]] && [[ $CC =~ ^clang ]]; then sudo apt-get install -qq libc++-dev libc++1 libc++abi-dev ; fi

addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
    - g++-4.9
    - gcc-4.9
    - libgsl0-dev
    - ninja-build

before_script:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo add-apt-repository ppa:samuel-bachmann/boost -y ; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt-get update -q                               ; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt-get install libboost1.60-all-dev            ; fi
  - mkdir -p "$TRAVIS_BUILD_DIR/release_build"
  - cmake -GNinja "-B$TRAVIS_BUILD_DIR/release_build" "-H$TRAVIS_BUILD_DIR" "-DCMAKE_TOOLCHAIN_FILE=travis-toolchain.cmake" -DCMAKE_BUILD_TYPE=RELEASE "-DCMAKE_CXX_FLAGS=${CMAKE_CXX_FLAGS}"

script:
- ninja -j 2 -k 0 -C "$TRAVIS_BUILD_DIR/release_build"
# Explicit use of "$TRAVIS_BUILD_DIR/[...]" in the initial command causes trouble here
- release_build/build-test --build_info=yes --log_level=message --report_level=short --show_progress=yes
# Explicit use of "$TRAVIS_BUILD_DIR/[...]" in the initial command causes trouble here
- release_build/cath-superpose --version
- mv "$TRAVIS_BUILD_DIR/release_build/cath-assign-domains" "$TRAVIS_BUILD_DIR/release_build/cath-assign-domains.$BUILD_FILE_SUFFIX"
- mv "$TRAVIS_BUILD_DIR/release_build/cath-cluster"        "$TRAVIS_BUILD_DIR/release_build/cath-cluster.$BUILD_FILE_SUFFIX"
- mv "$TRAVIS_BUILD_DIR/release_build/cath-map-clusters"   "$TRAVIS_BUILD_DIR/release_build/cath-map-clusters.$BUILD_FILE_SUFFIX"
- mv "$TRAVIS_BUILD_DIR/release_build/cath-refine-align"   "$TRAVIS_BUILD_DIR/release_build/cath-refine-align.$BUILD_FILE_SUFFIX"
- mv "$TRAVIS_BUILD_DIR/release_build/cath-resolve-hits"   "$TRAVIS_BUILD_DIR/release_build/cath-resolve-hits.$BUILD_FILE_SUFFIX"
- mv "$TRAVIS_BUILD_DIR/release_build/cath-ssap"           "$TRAVIS_BUILD_DIR/release_build/cath-ssap.$BUILD_FILE_SUFFIX"
- mv "$TRAVIS_BUILD_DIR/release_build/cath-superpose"      "$TRAVIS_BUILD_DIR/release_build/cath-superpose.$BUILD_FILE_SUFFIX"

deploy:
  provider: releases
  api_key:
    secure: U9kidMxrbP1+HDUcaGHKI57mJATYSSCjjjd+elPmTUpAwih9oerN4FKzJTsMHhhNRxieLanULcoVVM3EVcZR0EH6mL7TxQNs88Yspkncg76DoswgcIue0tMOONwQ8MLLnMIuihSD2QrVaDWiHMoKHLCIWTNrzUed9FfCHDisSwXCrIrhuyOdvCrmZBwe5NOmRzdzi4XhXBfcVdQHSQsClF29cE4D9ayimRSHEw/mt0MdXO76IelQUrGgpob+xItnOJks/hvB0vaDJ8HjXLSYkhy2ZS+VNwu6x+/OIqf/0H9qSJQNqRx8SYQPQjJUxBwJQcYr9gYlUT9xlsK4QTZz/ePOaxmvClQJvaUcXJu8I7LGI91SROJ5DlxBdwV6Jk1VvKZVaOSB1b96WJiQgURa3yiMC6CH/Jl7IyeinbcnrGBXUma3eysETJJmw1fiTQhyXQJx5GBGHQkyfvZTjb773B8ctfqUbYoxbGH/NHZg0abIEqgAG6FQIGzS6C+TbpZV5oHP1TVwny4lhlQWam+4iGw+MbnQHlJ70VBGfOB7NRuzt5uy9vXRZEPS8dF/T7E0GLxzkf7cq5SLWYQQGLmm9J7t5QC24vKJP0TpqX7w54Uln2VSW1sA04d2tHYSWnIIo9XGWggkd+HsBdVhUi0BR4Y62gXQfYQC64gT8wXCYr0=
  file:
    - "$TRAVIS_BUILD_DIR/release_build/cath-assign-domains.$BUILD_FILE_SUFFIX"
    - "$TRAVIS_BUILD_DIR/release_build/cath-cluster.$BUILD_FILE_SUFFIX"
    - "$TRAVIS_BUILD_DIR/release_build/cath-map-clusters.$BUILD_FILE_SUFFIX"
    - "$TRAVIS_BUILD_DIR/release_build/cath-refine-align.$BUILD_FILE_SUFFIX"
    - "$TRAVIS_BUILD_DIR/release_build/cath-resolve-hits.$BUILD_FILE_SUFFIX"
    - "$TRAVIS_BUILD_DIR/release_build/cath-ssap.$BUILD_FILE_SUFFIX"
    - "$TRAVIS_BUILD_DIR/release_build/cath-superpose.$BUILD_FILE_SUFFIX"
  on:
    condition: "$BUILDTYPE == RELEASE && $CC =~ ^gcc"
    repo: UCLOrengoGroup/cath-tools
    tags: true
